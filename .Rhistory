mean(maleedu72, na.rm = TRUE)
mean(gss$educ[gss$sex == "Male" & gss$year == "1972"],  na.rm = TRUE)
male_mean_year = function(year) {
mean(gss$educ[gss$sex == "Male" & gss$year == "1972"],  na.rm = TRUE)
}
rm(male_mean_year)
male_mean_year = function(year) {
mean(gss$educ[gss$sex == "Male" & gss$year == year],  na.rm = TRUE)
}
male_mean_year(1972)
male_mean_year(1974)
male_mean_year(2004)
male_mean_year(2012)
m_ed = array(0, dim=40)
for (i in 0:39) {
m_ed[i+1] =  male_mean_year(i+1971)
}
m_ed
for (i in 1:40) {
m_ed[i] =  male_mean_year(i+1971)
}
m_ed
male_mean_year(1979)
fix(gss$year == 1979)
gss79 = gss[gss$year == 1979]
fix(gss79)
fix(gss)
fix(gss)
write.csv(gss, file = "gss.xlsx")
write.csv(gss, file = "gss.csv")
mean(gss$educ[gss$sex == "Male" & gss$year == "1972"],  na.rm = TRUE)
mean(gss$educ[gss$sex == "Male" & gss$year == "2012"],  na.rm = TRUE)
mean(gss$educ[gss$sex == "Female" & gss$year == "2012"],  na.rm = TRUE)
mean(gss$educ[gss$sex == "Female" & gss$year == "1972"],  na.rm = TRUE)
nrow(gss$educ[gss$sex == "Female" & gss$year == "2012"],  na.rm = TRUE))
nrow(gss$educ[gss$sex == "Female" & gss$year == "2012"],  na.rm = TRUE)
nrow(gss$educ[gss$sex == "Female" & gss$year == "2012"])
length(gss$educ[gss$sex == "Female" & gss$year == "2012"])
length(gss$educ[gss$sex == "Male" & gss$year == "2012"])
gss12 = gss[gss$year == "2012"]
gss12 = subset(gss, gss$year == "year")
fix(gss12)
fix(gss10)
gss12 = subset(gss, gss$year == "2012")
fix(gss12)
fix(gss12)
gss12_college =  subset(gss12, gss$degree == "Bachelor" or "Graduate")
gss12_college =  subset(gss12, gss$degree == "Bachelor" o| "Graduate")
gss12_college =  subset(gss12, gss$degree == "Bachelor" | "Graduate")
gss12_college =  subset(gss12, gss$degree == "Bachelor" | gss$degree ==  "Graduate")
gss12_college
fix(gss12_college)
gss12_college =  subset(gss12, gss12$degree == "Bachelor" | gss12$degree ==  "Graduate")
fix(gss12_college)
gss12_nocollege =  subset(gss12, gss12$degree != "Bachelor" & gss12$degree !=  "Graduate")
fix(gss12_nocollege)
prop_nocol = subset(gss12_nocollege, gss12_nocollege$abrape == Yes)
prop_nocol = subset(gss12_nocollege, gss12_nocollege$owngun == YES)
prop_nocol = subset(gss12_nocollege, gss12_nocollege$owngun == Yes)
prop_nocol = subset(gss12_nocollege, gss12_nocollege$owngun == Yes)
prop_nocol = subset(gss12_nocollege, gss12_nocollege$owngun == "Yes")
prop_nocol
fix(prop_nocol)
nrow(gss12_nocollege)
nrow(prop_nocol)
prop_nocol_nogun = subset(gss12_nocollege, gss12_nocollege$owngun == "No")
nrow(prop_nocol_nogun)
317 + 597
prop_nocol_gun = subset(gss12_nocollege, gss12_nocollege$owngun == "Yes")
nrow(prop_nocol_gun )
prop_col_gun = subset(gss12_college, gss12_college$owngun == "Yes")
nrow(prop_col_gun)
prop_col_nogun = subset(gss12_college, gss12_college$owngun == "No")
nrow(prop_col_nogun)
nrow(gss12_college)
239+597
836 + 438
table
table(nrow(prop_col_nogun), nrow(prop_col_gun))
counts = table(nrow(prop_col_nogun), nrow(prop_col_gun))
counts
barplot(counts, main="Gun ownership by college degree",
xlab="College", col=c("darkblue","red"),
legend = rownames(counts))
barplot(nrow(prop_col_nogun), nrow(prop_col_gun))
barplot(nrow(prop_col_nogun)
)
table(nrow(prop_col_nogun), nrow(prop_col_gun), nrow(prop_nocol_gun), nrow(prop_nocol_gnoun))
table(nrow(prop_col_nogun), nrow(prop_col_gun), nrow(prop_nocol_gun), nrow(prop_nocol_nogun))
counts
mosaicplot(counts)
counts = table(nrow(prop_col_nogun), nrow(prop_col_gun))
mosaicplot(counts)
mosaicplot(counts, xlab="college",ylab="numberofgunowners")
gundata <-matrix(c(121, 239, 317, 597))
colnames(gundata) <- c('college', 'nocollege')
colnames(gundata) <- c('college', 'nocollege')
gundata <-matrix(c(121, 239, 317, 597))
gundata = matrix(c(nrow(prop_col_gun), nrow(prop_col_nogun), nrow(prop_nocol_gun), nrow(prop_nocol_nogun)))
colnames(gundata) = c('college', 'nocollege')
rm(gundata)
gundata = matrix(c(nrow(prop_col_gun), nrow(prop_col_nogun), nrow(prop_nocol_gun), nrow(prop_nocol_nogun)), ncol=2)
colnames(gundata) = c('college', 'nocollege')
rownames(gundata) =  c('owngun', 'dontowngun')
gundata.table =  as.table(gundata)
gundata.table
barplot(gundata)
mosaicplot(gundata)
rm(counts)
counts = table(gundata$college, gundata$nocollege)
barplot(gundata)
barplot(gundata, ylab=owngun)
barplot(gundata)
barplot(gundata, beside=FALSE)
The question for inference is, whether having a college degree is associated with gun ownership.  I am comparing two categorical variables here. So I decided to use Chisquare test for independence.
The question for inference is, whether having a college degree is associated with gun ownership.  I am comparing two categorical variables here. So I decided to use Chisquare test for independence.
barplot(gundata, ylab="owngun")
barplot(gundata, ylab="gunownership")
barplot(gundata, ylab="gun ownership")
121/559
317/914
121/239
nrow(prop_col_gun)/(nrow(prop_col_gun)+nrow(prop_col_nogun))
nrow(prop_col_gun)
(nrow(prop_col_gun)+nrow(prop_col_nogun))
nrow(prop_col_gun)
nrow(prop_col_nogun)
p_col = nrow(prop_col_gun)/(nrow(prop_col_gun)+nrow(prop_col_nogun))
p_col
p_nocol = nrow(prop_nocol_gun)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun)))
p_nocol = nrow(prop_nocol_gun)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun))
p_nocol
p_col * 360
se = sqrt((p_col*(1-p_col)/(nrow(prop_col_gun)+nrow(prop_col_nogun))) + ((p_nocol*(1-p_nocol)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun)))))
se
0.3361111*(1-0.3361111)/360
0.3468271*(1-0.3468271)/971
sqrt(0.0006198345 + 0.0002333039
)
sqrt(0.3361111*(1-0.3361111)/360 + 0.3468271*(1-0.3468271)/971)
(p_col*(1-p_col)/(nrow(prop_col_gun)+nrow(prop_col_nogun)))
((p_nocol*(1-p_nocol)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun))))
(p_nocol*(1-p_nocol)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun)))
(p_nocol*(1-p_nocol)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun)))
p_nocol
0.346827*(1-0.346827)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun))
0.346827*(1-0.346827)/914
se = sqrt((p_col*(1-p_col)/(nrow(prop_col_gun)+nrow(prop_col_nogun))) + (nrow(prop_nocol_gun)+nrow(prop_nocol_nogun)))
se
se = sqrt((p_col*(1-p_col)/(nrow(prop_col_gun)+nrow(prop_col_nogun))) + ((p_nocol*(1-p_nocol)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun)))))
se
(p_col*(1-p_col)/(nrow(prop_col_gun)+nrow(prop_col_nogun)))
((p_nocol*(1-p_nocol)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun))))
121/360
0.3361111*(1-0.3361111)/360
317/914
0.3468271 * (1-0.3468271)/914
sqrt(0.0006198345 +  0.0002478535)
(p_col - pnocol) + 1.96 * 0.02945654
(p_col - p_nocol) + 1.96 * 0.02945654
(p_col - p_nocol) - 1.96 * 0.02945654
(p_col-p_nocol)-1.96*se
CI = array(0,2)
CI[1] = (p_col-p_nocol)-1.96*se
CI[2] = (p_col-p_nocol)+1.96*se
CI = array(0,2)
CI[1] = (p_col-p_nocol)-1.96*se
CI[2] = (p_col-p_nocol)+1.96*se
CI
se = sqrt((p_col*(1-p_col)/(nrow(prop_col_gun)+nrow(prop_col_nogun))) + (nrow(prop_nocol_gun)+nrow(prop_nocol_nogun)))
se
se = sqrt((p_col*(1-p_col)/(nrow(prop_col_gun)+nrow(prop_col_nogun))) + ((p_nocol*(1-p_nocol)/(nrow(prop_nocol_gun)+nrow(prop_nocol_nogun)))))
se
p_hnot = (nrow(prop_col_gun) + nrow(prop_nocol_gun))/ ((nrow(prop_col_gun)+nrow(prop_col_nogun)) + (nrow(prop_nocol_gun)+nrow(prop_nocol_nogun)))
p_hnot
(121+317)/ (360 + 914)
ls()
nrow(gss12_college)
nrow(gss12_no_college)
nrow(gss12_nocollege)
121 / 559
317/1407
239 / 559
597/nrow(gss12_no_college)
597/nrow(gss12_no_ollege)
597/nrow(gss12_nocollege)
prop_nocol_abrape = subset(gss12_nocollege, gss12_nocollege$abrape == "Yes")
prop_col_abrape = subset(gss12_college, gss12_college$abrape == "Yes")
prop_nocol_abrape
nrow(prop_nocol_abrape)
nrow(prop_col_abrape)
nrow(prop_nocol)
nrow(prop_col_abrape)
nrow(gss12_nocollege)
638 / 1407
prop_col_abrape
nrow(prop_col_abrape)
nrow(gss12_college)
299 / 559
638 / 1407
tvhrs_nocol = gss12_nocollege$tvhours
fix(tvhrs_nocol)
mean(tvhrs_nocol, na.rm = TRUE)
tvhrs_col = gss12_college$tvhours
mean(tvhrs_col, na.rm = TRUE)
prop_nocol_racdif1 = subset(gss12_nocollege, gss12_nocollege$racdif1 == "Yes")
prop_col_racdif1 = subset(gss12_college, gss12_college$racdif1 == "Yes")
nrow(prop_nocol_racdif1)
nrow(prop_col_racdif1)
324 / nrow(gss12_nocollege)
nrow(prop_col_racdif1) / nrow(gss12_college)
gss75 = subset(gss, gss$year == "1975")
gss75_college_female =  subset(gss75, gss75$sex="Female" & (gss75$degree == "Bachelor" | gss75$degree ==  "Graduate"))
gss75_college_female =  subset(gss75, gss75$sex =="Female" & (gss75$degree == "Bachelor" | gss75$degree ==  "Graduate"))
gss12_college_female =  subset(gss12, gss12$sex =="Female" & (gss12$degree == "Bachelor" | gss12$degree ==  "Graduate"))
nrow(gss75_college_female)
nrow(gss12_college_female)
nrow(gss75)
nrow(gss12)
91/1490
301/1974
prop_75_gun = subset(gss75, gss75$owngun == "Yes")
prop_12_gun = subset(gss12, gss12$owngun == "Yes")
nrow(prop_75_gun)
nrow(prop_12_gun)
prop_12_abrape = subset(gss12, gss12$abrape == "Yes")
prop_75_abrape = subset(gss75, gss75$abrape == "Yes")
nrow(prop_12_abrape)
nrow(prop_75_abrape)
nrow(gss12)
1190/1974
941/1974
1190/ nrow(gss75)
fix(gss75)
fix(gss12)
p_hnot = (nrow(prop_col_gun) + nrow(prop_nocol_gun))/ (nrow(gss12_college) + nrow(gss12_nocollege))
p_hnot
se2= sqrt((p_hnot*(1-p_hnot)/nrow(gss12_college))+ (p_hnot*(1-p_hnot)/nrow(gss12_nocollege)))
se2
install.packages(pando)
install.packages(pandoc)
install.packages("pandoc")
diff = norm(0, 0.02080434)
x   <- seq(-0.5,0.01,1000)
x
x   <- seq(-0.5,0.01,0.5)
x
x   <- seq(-0.5,0.5, 0.01)
x
y = dnorm(x, 0, 0.02080434)
plot(x,y)
x   <- seq(-0.2,0.2, 0.01)
plot(x,y)
y = dnorm(x, 0, 0.02080434)
plot(x,y)
x   <- seq(-0.1,0.1, 0.01)
y = dnorm(x, 0, 0.02080434)
plot(x,y)
plot(x,y, li)
plot(x,y, type = "l")
(diff - 0)/se2
diff = p_col - p_nocol
Z_score = (diff - 0)/se2
z_score
nrow(gss12)
source('~/.active-rstudio-document', echo=TRUE)
0.2164580   - 0.2253021
pnorm(0.0088441, 0, 0.02080434)
pnorm(0.0088441, 0, 0.02080434, lower.tail = FASLE)
pnorm(0.0088441, 0, 0.02080434, lower.tail = FALSE)
0.3353788 * 2
set.seed()
set.seed(12345)
X = data.frame("var1"=sample(1:100), "var2"=sample(A:z, var3=sample(25:100)))
X = data.frame("var1"=sample(1:100), "var2"=sample(A:Z), var3=sample(25:100)))
X = data.frame("var1"=sample(1:100), "var2"=sample(A:Z), var3=sample(25:100))
alphabet =  c(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
alphabet =  c("a",'b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')
X = data.frame("var1"=sample(1:100), "var2"=sample(alphabet), var3=sample(25:100))
X = data.frame("var1"=sample(1:25), "var2"=sample(alphabet), var3=sample(25:50))
X = data.frame("var1"=sample(1:25), "var2"=sample(alphabet), var3=sample(25:50))
X = data.frame("var1"=sample(1:25), "var2"=sample(alphabet), var3=sample(25:51))
X = data.frame("var1"=sample(1:26), "var2"=sample(alphabet), var3=sample(25:5))
X = data.frame("var1"=sample(1:26), "var2"=sample(alphabet), var3=sample(25:50))
X
X[sample(1:5),]
X = X[sample(1:5),]
X
X$var2[c(1,3)] = NA
X
X[,1]
X[,"var1"]
X[1:2,"var1"]
X[1:2,"var2"]
X[(X$var1 <=10 & X$var3 > 25)]
X
X[(X$var1 <=25 & X$var3 > 25)]
X[(X$var1 <= 25 & X$var3 > 25)]
X[(X$var1 < 25 & X$var3 > 25)]
X[(X$var1 < 25) & (X$var3 > 25)]
X[(X$var1 < 25) ]
X[(X$var1 < 25) ]
X[(var1 < 25) ]
X[("var1" < 25) ]
X
subset(X, "var1" < 25)
X
subset(X, "var1" <= 25)
Y = x
Y
X
Y = X
Y
X[(X$var1 < 25)]
X[(X$var1 <= 25)]
sort(X$var1)
sort(X$var1, decreasing=TREU)
sort(X$var1, decreasing=TRUE)
sort(X$var1, na.last=TRUE)
sort(X$var2, na.last=TRUE)
X[order(X$var1), ]
X[order(X$var1
,X$var3) ]
X[order(X$var1,X$var3) ]
library(plyr)
arrange(X, var1)
arrange(X, desc(var1))
X$var4 =  rnorm(5)
X
X$var5 =  c(a,b,c,d,e)
X$var5 =  c('a','b','c','d','e')
X
Y = cbind(X, rnorm(5))
Y
Y = cbind(rnorm(5), X)
Y
Y = rbind(rnorm(5), X)
Y = rbind(rnorm(6), X)
Y = rbind(rnorm(7), X)
fileUrl= "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile="./datarestaurants.csv",method=curl)
download.file(fileUrl, destfile="./datarestaurants.csv",method="curl")
download.file(fileUrl, destfile=".restaurants.csv",method="curl")
download.file(fileUrl, destfile="./restaurants.csv",method="curl")
download.file(fileUrl, destfile="restaurants.csv",method="curl")
history | grep download
history
history() | grep download
history()
hist
hist()
download.file(fileUrl, destfile="restaurants.csv", mode="wb")
ls()
restdata = read.csc("restaurant.csv", header = TRUE, sep = ",")
restdata = read.csv("restaurant.csv", header = TRUE, sep = ",")
ls()
pwd
getwd()
restdata = read.csc("restaurants.csv", header = TRUE, sep = ",")
restdata = read.csv("restaurants.csv", header = TRUE, sep = ",")
fix(restdata)
head(restdata)
head(restdata,3)
head(restdata,3)
tail(restdata, 3)
tail(restdata, 3)
summary(restdata$zipcode)
summary(restdata)
str(restdata)
names(restdata)
table(restdata$name)
table(restdata$zipcode)
names(restdata)
table(restdata$zipCode)
attach(restdata)
table(name, neighborhood)
X
colsums(X$var1)
colSums(X$var1)
a = [1,2,3,4]
a = (1,2,3,4)
a = a(1,2,3,4)
a = c(1,2,3,4)
a
summary(a)
str(a)
A = [1;2;3;4;5]
A= matrix(1,2,3,4,)
A
colSums(A)
quantile(restdata$zipCode)
boxplot(restdata$zipCode)
range(restdata$zipCode)
all(restdata$councilDistrict > 0)
rowSums(A)
table(restdata$zipCode %in% c("21212", "21213"))
restdata[restdata$zipCode %in% c("21212", "21213"),)
restdata[restdata$zipCode %in% c("21212", "21213"),]
data(UCBAdmissions)
DF = as.data.fram(UCBAdmissions)
DF = as.data.frame(UCBAdmissions)
summary
summary(DF)
xt = xtabs(Freq ~ Gender + Admit, data=DF)
xt
xt = xtabs(Gender + Admit, data=DF)
xt = xtabs(Freq ~ , data=DF)
object.size(A)
object.size(X)
object.size(restdata)
rm(restdata)
rm(restdata)
object.size(X)
object.size(restdata)
object.size(restaurants.csv)
s1 = seq(1,10, by=2)
s1
s2 = seq(1,10, length=2)
s2
s2 = seq(1,10, length=4)
s2
s2 = seq(1,10, length=5)
s2
x <- c(1,2,3,4,5)
seq(along = x)
z
x
x <- c(2,6,4,9,3)
seq(along = x)
x
along
restdata = read.csc("restaurants.csv", header = TRUE, sep = ",")
restdata = read.csv("restaurants.csv", header = TRUE, sep = ",")
restdata$nearme = restdata$neighborhood %in% c("Roland park", "Homeland")
fix(restdata)
table(restdata$nearme)
restdata$zipwrong = ifelse(restdata$zipCode < 0, TRUE, FALSEO)
restdata$zipwrong = ifelse(restdata$zipCode < 0, TRUE, FALSE)
restdata$zipwrong
restdata$zipwrong
restdata$zipgroups = cut(restdata$zipCode, breaks=qualtile(restdata$zipCode))
restdata$zipgroups = cut(restdata$zipCode, breaks=quantile(restdata$zipCode))
table(restdata$zipgroups)
fix(restdata)
yesno =  sample(c(“yes”, “no”), size=10, replace=TRUE)
yesno =  sample(c(“yes”, “no”), size=10, replace=TRUE)
4+5
sample(c(“yes”, “no”), size=10, replace=TRUE)
sample(c("TRUE", "FALSE"), size=10, replace=TRUE)
sample(c("yes", "no"), size=10, replace=TRUE)
yesno = sample(c("yes", "no"), size=10, replace=TRUE)
yesnofac = factor(yesno)
yesno
yesnofac = factor(yesno, levels=c("yes", "no"))
yesno
relevel(yesnofac, ref="yes")
as.numeric(yesnofac)
library(reshape2)
head(mtcars)
fix(mtcars)
mtcars$carname = rownames(mtcars)
fix(mtcars)
carmelt =  melt(mtcars, id=c("carname","gear","cyl"), measure.vars=c("mpg", "hp")
)
fix(carmelt)
cylData = dcast(carmelt, cyl ~ variable)
cylData
cylData = dcast(carmelt, cyl ~ variable, mean)
cylData
head(InsectSprays)
fix(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
spins = split(InsectSprays$count, InsectSprays$spray)
spins
lappy(spins, sum)
ddply
ddply(InsectSprays, .(spray), summarise, sum= sum(count))
x = ddply(InsectSprays, .(spray), summarise, sum= sum(count))
x
chicgo = readRDS("chicago.rds")
filter
filter()
ls()
gsfil = filter(gss12, gss12$abrape == "Yes")
load(dplyr)
install.packages("dplyr")
gsfil = filter(gss12, gss12$abrape == "Yes")
load(dply)
load(dplyr)
librayr(dplyr)
library(dplyr)
gsfil = filter(gss12, gss12$abrape == "Yes")
gsfil
fix(gssfi)
fix(gssfi)
fix(gsfil)
fix(gsfil)
gsfil = arrange(gsfil, gsfil$age)
fix(gssfi)
fix(gsfil)
gsfilage = arrange(gsfil, gsfil$age)
gsfilage = arrange(gsfil, age)
gsfilage
fix(gsfilage)
gsfilage_rename =  rename(gsfilage, abrape=abortionwithrape)
gsfilage_rename =  rename(gsfilage, abortionwithrape=abrape)
fix(gsfilage_rename)
history()
his = history()
write.csv(his, file="his.csv")
write.table(his, file="his")
getwd()
